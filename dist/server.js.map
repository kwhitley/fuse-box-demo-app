{"version":3,"sources":["/server/index.js","/server/tags.js"],"names":["require","app","PRODUCTION","process","env","NODE_ENV","PORT","server","createServer","io","use","bodyParser","json","urlencoded","extended","staticPath","path","join","__dirname","console","log","express","static","get","req","res","foo","mode","port","test","TEST","production","setTimeout","fs","readFile","err","data","pkg","JSON","parse","chance","Math","random","status","send","tags","listen","min","max","floor","VALUE_LIMIT","id","name","created","Date","updated","isActive","values","registerTagMessages","updateTag","activeTags","filter","tag","length","lastValue","value","up","newValue","date","slice","emit","setInterval"],"mappings":"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","file":"","sourcesContent":["// include other main deps\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport compression from 'compression'\nimport path from 'path'\nimport fs from 'fs'\nimport tags, { registerTagMessages } from './tags'\n// const pkg = require('../package.json')\n\n// load .env using dotenv first\nrequire('env-autoload')\n\n// instantiate express\nconst app = express()\nconst PRODUCTION = process.env.NODE_ENV === 'production'\nconst PORT = process.env.PORT || 3000\nconst server = require('http').createServer(app)\nconst io = require('socket.io')(server)\n\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(compression())\n\n// static serving from /dist/client\nconst staticPath = path.join(__dirname, '../dist/client')\nconsole.log(`serving static content from ${staticPath}`)\napp.use(express.static(staticPath))\n// app.use('/client', express.static(staticPath))\n\n// example API entry\napp.get('/test', (req, res) =>\n  res.json({\n    foo: 'bar',\n    mode: process.env.NODE_ENV,\n    port: process.env.PORT,\n    test: process.env.TEST,\n    production: PRODUCTION,\n  })\n)\n\n// json import support\napp.get('/package.json',\n  (req, res) => setTimeout(() => {\n    fs.readFile(\n      path.join(__dirname, '../package.json'),\n      'utf8',\n      (err, data) => {\n        if (err) throw err\n\n        const pkg = JSON.parse(data)\n        const chance = Math.random() > 0.4\n\n        return (chance && res.json(pkg)) || res.status(403).send()\n      }\n    )\n  }, 1000)\n)\n\nregisterTagMessages(io)\napp.get('/api/tags', tags)\napp.get('/foo', (req, res) => res.send('bar'))\n\nserver.listen(PORT)\nconsole.log(`Express server @ http://localhost:${PORT} (${PRODUCTION ? 'production' : 'development'})\\n`)\n","const app = require('express')()\n\nconst random = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min\n\nconst VALUE_LIMIT = 20\n\nconst tags = [\n  { id: 1, name: 'foo', created: new Date(), updated: new Date(), isActive: true, values: [] },\n  { id: 2, name: 'bar', created: new Date(), updated: new Date(), isActive: true, values: [] },\n  { id: 3, name: 'baz', created: new Date(), updated: new Date(), isActive: true, values: [] },\n  { id: 4, name: 'cat', created: new Date(), updated: new Date(), isActive: false, values: [] },\n  { id: 5, name: 'miffles', created: new Date(), updated: new Date(), isActive: false, values: [] },\n  { id: 6, name: 'vlad', created: new Date(), updated: new Date(), isActive: true, values: [] },\n  { id: 7, name: 'baxter', created: new Date(), updated: new Date(), isActive: true, values: [] },\n]\n\napp.get('*', (req, res) => res.json(tags))\n\nexport default app\n\nexport const registerTagMessages = io => {\n  const updateTag = () => {\n    const activeTags = tags.filter(tag => tag.isActive)\n    const tag = activeTags[random(0, activeTags.length - 1)]\n    const { values } = tag\n    const lastValue = (values.length && values[values.length-1].value) || 0\n    const up = Math.random() > 0.5\n    const newValue = lastValue + (up ? 1 : -1)\n\n    tag.values = ([ ...tag.values, { value: newValue, date: new Date() }]).slice(-VALUE_LIMIT)\n    tag.updated = new Date()\n\n    io.emit('tags/update', { id: tag.id, values: tag.values })\n  }\n\n  setInterval(updateTag, 50)\n}\n"]}