{"version":3,"sources":["/client/index.jsx","/client/state/index.js","/client/state/groups.js","/client/state/api.js","/client/state/route.js","/client/state/dashboards.js","/client/state/dashboards.models.js","/client/state/tags.js","/client/state/tags.models.js","/client/state/tags.streaming.js","/client/components/App.jsx","/client/components/Nav.jsx","/client/components/pages/Groups/EditGroups.jsx","/client/components/pages/Groups/GroupRow.jsx","/client/components/pages/Groups/AddGroup.jsx","/client/components/pages/Groups/GroupOrder.jsx","/client/components/pages/Groups/EditableGroup.jsx","/client/components/pages/Package/index.jsx","/client/components/pages/Package/Dependencies.jsx","/client/components/pages/Package/List.jsx","/client/components/messages/ErrorMessage.jsx","/client/components/pages/Tags/index.jsx","/client/components/pages/Groups/index.jsx","/client/components/pages/Groups/GroupsNavigation.jsx","/client/components/pages/Groups/SelectableGroup.jsx","/client/components/pages/Tags/TagsList.jsx","/client/components/pages/Tags/HighChart.jsx","/client/components/pages/Tags/AllowEdit.jsx","/client/components/pages/Tags/Breadcrumbs.jsx"],"names":["history","sagaMiddleware","rootReducer","mergedReducers","store","window","__REDUX_DEVTOOLS_EXTENSION__","listen","path","location","pathname","search","hash","dispatch","route","actions","change","dashboards","addGroup","addTagToGroup","run","api","sagas","watcherSaga","tags","streamingSaga","loadTags","connectStream","ReactDom","render","document","getElementById","groups","namespace","getGroups","state","get","getGroupById","id","find","i","getVisibleGroup","items","getIsEditing","getNumGroups","size","getHalfGroups","number","slice","Math","floor","asTreeData","flatData","toJS","rootKey","getTreeData","createTrail","node","trail","parentId","unshift","getBreadcrumbs","getGroupsSorted","sort","A","B","a","b","reverse","getHalfGroupsUnsorted","getHalfGroupsSorted","selectors","Group","Record","undefined","title","date","Date","isActive","isVisible","expanded","initialState","isEditing","all","actionReducers","type","reducer","action","nextID","maxBy","update","push","toggleIsEditing","set","setVisibleGroup","map","group","toggleIsActive","active","editGroup","values","merge","removeGroup","filter","toggleGroupExpanded","reorderGroups","parentsMap","g","fetchPackageInfo","byName","name","toDepsArray","deps","version","getPackage","getIn","getTimesLoaded","getDependencies","getDevDependencies","getDependenciesAsArray","getDevDependenciesAsArray","Resource","isLoading","success","error","data","package","timesLoaded","axios","then","r","console","log","message","loadPackageInfo","loadPackageInfoSuccess","count","loadPackageInfoError","getTags","findTag","tag","findGroup","getLastId","getLastGroupID","parent","tagID","groupID","matchedGroup","Error","GroupedTag","List","Tag","fetchTags","getTagById","item","onlyActive","getActiveTags","getEditingTagID","getTreeFromFlatData","getEditingTag","tagsLoader","ApiResource","streamStatus","Stream","editingTag","order","created","updated","setIn","connectStreamSuccess","disconnectStream","updateTagFromStream","loadTagsSuccess","loadTagsError","setEditingTag","unsetEditingTag","editTag","isWatching","isConnected","lastMessageReceived","CHANNEL_NAME","connect","channel","socket","resolve","on","subscribe","emit","warn","tasks","close","App","routes","component","length","ConnectedEditGroups","ConnectedPackage","Tags","Nav","NavLink","EditGroups","groupsTreeData","propTypes","PropTypes","array","isRequired","func","mapStateToProps","GroupRow","round","object","AddGroup","props","value","bind","e","setState","target","groupName","labelPosition","icon","content","React","Component","GroupOrder","orderChanged","treeData","flat","getNodeKey","ignoreCollapsed","remapped","parentNode","EditableGroupForm","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","dirty","enableReinitialize","mapPropsToValues","setSubmitting","setErrors","Package","pkg","devDeps","defaultProps","Dependencies","PackageList","libs","lib","string","ErrorMessage","children","element","cards","Array","fill","random","toString","Groups","bool","ConnectedGroups","GroupsNavigation","alert","ConnectedGroupsNavigation","SelectableGroup","selectGroupAction","TagsList","editingTagID","activeGroup","breadcrumbs","ConnectedTagsList","config","chart","text","credits","enabled","xAxis","dateTimeLabelFormats","month","year","yAxis","series","legend","plotOptions","spline","marker","Chart","next","getChart","newValues","v","addPoint","pop","ref","AllowEdit","enterEditMode","exitEditMode","saveTagAction","clickHandler","other"],"mappings":"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","file":"","sourcesContent":["import 'semantic-ui-css/semantic.min.css'\nimport 'react-sortable-tree/style.css'\n// import 'antd/dist/antd.min.css'\n\nimport React from 'react'\nimport ReactDom from 'react-dom'\n\nimport { combineReducers } from 'redux-immutable'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport createSagaMiddleware from 'redux-saga'\nimport createHistory from 'history/createBrowserHistory'\n\nimport mergedReducers from './state'\nimport App from './components/App'\nimport api from './state/api'\nimport tags from './state/tags'\nimport route from './state/route'\nimport dashboards from './state/dashboards'\nimport './styles/base.scss'\nimport './styles/base.less'\n\nconst history = createHistory()\nconst sagaMiddleware = createSagaMiddleware()\nconst rootReducer = combineReducers(mergedReducers)\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(sagaMiddleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  )\n)\n\n// history binding... messy, abstract elsewhere or turn into module\nhistory.listen(location => {\n  let path = `${location.pathname}${location.search}${location.hash}`\n  store.dispatch(route.actions.change(path))\n})\n\nstore.dispatch(dashboards.addGroup('Newish Group', 1))\nstore.dispatch(dashboards.addTagToGroup(6, 2))\n\nlet path = `${location.pathname}${location.search}${location.hash}`\nstore.dispatch(route.actions.change(path))\n\n// register sagas\nsagaMiddleware.run(api.sagas.watcherSaga)\nsagaMiddleware.run(tags.sagas.watcherSaga)\nsagaMiddleware.run(tags.sagas.streamingSaga)\nstore.dispatch(tags.loadTags())\nstore.dispatch(tags.connectStream())\n\nReactDom.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('app')\n)\n","import { merge } from 'redux-automap'\nimport groups from './groups'\nimport api from './api'\nimport route from './route'\nimport dashboards from './dashboards'\nimport tags from './tags'\n\nexport default merge([ groups, api, route, dashboards, tags ])\n","import { fromJS, List, Record } from 'immutable'\nimport { automap } from 'redux-automap'\nimport { createSelector } from 'reselect'\nimport { getTreeFromFlatData } from 'react-sortable-tree'\n\nexport const namespace = 'groups'\n\nconst getGroups = state => state.get('all')\nconst getGroupById = (groups, id) => groups.find(i => i.get('id') === id)\nconst getVisibleGroup = createSelector(getGroups, items => items.find(i => i.get('isVisible')))\nconst getIsEditing = state => state.get('isEditing')\nconst getNumGroups = state => state.get('all').size\nconst getHalfGroups = (groups, number) => groups.slice(0, Math.floor(number / 2))\nconst asTreeData = groups => getTreeFromFlatData({ flatData: groups.toJS(), rootKey: null })\nconst getTreeData = createSelector(getGroups, asTreeData)\nconst createTrail = (groups, node, trail = List()) => {\n  if (!node) {\n    return trail\n  }\n\n  const parentId = node.get('parentId')\n\n  trail = trail.unshift(node)\n\n  if (!parentId) {\n    return trail\n  }\n\n  return createTrail(groups, getGroupById(groups, parentId), trail)\n}\nconst getBreadcrumbs = createSelector(getGroups, getVisibleGroup, createTrail)\n\nconst getGroupsSorted = createSelector(\n  [ getGroups ],\n  groups => groups.sort((A, B) => {\n    const a = B.get('title')\n    const b = A.get('title')\n\n    return a < b ? -1 : (a > b ? 1 : 0)\n  }).reverse()\n)\n\nconst getHalfGroupsUnsorted = createSelector(\n  [ getGroups, getNumGroups ], getHalfGroups\n)\n\nconst getHalfGroupsSorted = createSelector(\n  [ getGroupsSorted, getNumGroups ], getHalfGroups\n)\n\nexport const selectors = {\n  getIsEditing,\n  getGroups,\n  getNumGroups,\n  getGroupsSorted,\n  getHalfGroupsUnsorted,\n  getHalfGroupsSorted,\n  getTreeData,\n  getVisibleGroup,\n  getBreadcrumbs\n}\n\nconst Group = new Record({\n  id: undefined,\n  parentId: null,\n  title: 'new group',\n  date: new Date(),\n  isActive: false,\n  isVisible: false,\n  expanded: false\n})\n\n// initial state for reducer\nexport const initialState = fromJS({\n  isEditing: false,\n  all: [\n    new Group({ id: 1, title: 'Asset 1' }),\n    new Group({ id: 2, title: 'Asset 2' }),\n    new Group({ id: 3, parentId: 2, title: 'Pump 1' }),\n    new Group({ id: 4, parentId: 2, title: 'Pump 2' }),\n    new Group({ id: 5, parentId: 4, title: 'Specific Tag Group' }),\n    new Group({ id: 6, title: 'Asset 3' }),\n    new Group({ id: 7, title: 'Asset 4' }),\n  ],\n})\n\n// define all action/reducer pairs here... add \"type\" attributes for\nexport const actionReducers = [\n  {\n    addGroup: (title = 'new group') => ({ type: 'groups/ADD_GROUP', title }),\n    reducer: (state, action) => {\n      let nextID = state.get('all').maxBy(i => i.get('id')).get('id') + 1\n\n      return state.update('all', groups => groups.push(new Group({\n        id: nextID,\n        title: action.title,\n        date: new Date(),\n      })))\n    }\n  },\n  {\n    toggleIsEditing: () => ({ type: 'groups/TOGGLE_IS_EDITING' }),\n    reducer: state => state.set('isEditing', !state.get('isEditing'))\n  },\n  {\n    setVisibleGroup: id => ({ type: 'groups/SET_VISIBLE_GROUP', id }),\n    reducer: (state, action) => state.update('all', groups => groups.map(group => group.set('isVisible', group.get('id') === action.id)))\n  },\n  {\n    toggleIsActive: id => ({ type: 'groups/TOGGLE_GROUP_IS_ACTIVE', id }),\n    reducer: (state, action) => state.update('all', groups => groups.map(group => group.get('id') === action.id ? group.update('isActive', active => !active) : group))\n  },\n  {\n    editGroup: (id, values) => ({ type: 'groups/EDIT_GROUP', id, values }),\n    reducer: (state, action) => state.update('all', groups => groups.map(group => group.get('id') === action.id ? group.merge(action.values) : group))\n  },\n  {\n    // type: constants.REMOVE_GROUP,\n    removeGroup: id => ({ type: 'groups/REMOVE_GROUP', id }),\n    reducer: (state, action) => state.update('all', groups => groups.filter(i => i.get('id') !== action.id))\n  },\n  {\n    // type: constants.REMOVE_GROUP,\n    toggleGroupExpanded: id => ({ type: 'groups/TOGGLE_GROUP_EXPANDED', id }),\n    reducer: (state, action) => state.update('all', groups => groups.map(group => group.get('id') === action.id ? group.update('expanded', active => !active) : group))\n  },\n  {\n    // type: constants.REMOVE_GROUP,\n    reorderGroups: parentsMap => ({ type: 'groups/REORDER_GROUPS', parentsMap }),\n    reducer: (state, action) => state\n                                  .update('all',\n                                    groups => List(action.parentsMap.map(\n                                      g => groups\n                                            .find(group => group.get('id') === g.id)\n                                            .set('parentId', g.parentId)\n                                            .set('expanded', g.expanded)\n                                    ))\n                                  )\n  }\n]\n\nexport default automap({ namespace, actionReducers, initialState, selectors })\n","import { fromJS, Record } from 'immutable'\nimport { automap } from 'redux-automap'\nimport { createSelector } from 'reselect'\nimport axios from 'axios'\nimport { call, put, takeLatest } from 'redux-saga/effects'\n\nexport const namespace = 'api'\n\nconst byName = (a, b) => a.name < b.name ? -1 : (a.name > b.name ? 1 : 0)\nconst toDepsArray = deps => deps && Object\n                                      .entries(deps.toJS())\n                                      .map(i => ({ name: i[0], version: i[1] }))\n                                      .sort(byName)\n\nconst getPackage = state => state.getIn(['package'])\nconst getTimesLoaded = state => state.get('timesLoaded')\nconst getDependencies = state => state.getIn([ 'package', 'data', 'dependencies' ])\nconst getDevDependencies = state => state.getIn([ 'package', 'data', 'devDependencies' ])\nconst getDependenciesAsArray = createSelector([ getDependencies ], toDepsArray)\nconst getDevDependenciesAsArray = createSelector([ getDevDependencies ], toDepsArray)\n\nconst selectors = {\n  getPackage,\n  getTimesLoaded,\n  getDependencies,\n  getDevDependencies,\n  getDependenciesAsArray,\n  getDevDependenciesAsArray,\n}\n\nconst Resource = Record({\n  isLoading: false,\n  success: undefined,\n  error: undefined,\n  data: undefined,\n})\n\n// initial state for reducer\nexport const initialState = fromJS({\n  package: new Resource(),\n  timesLoaded: 0,\n})\n\nfunction* fetchPackageInfo() {\n  try {\n    const data = yield call(() => axios.get('/package.json').then(r => fromJS(r.data)))\n    yield put({ type: 'api/LOAD_PACKAGE_INFO_SUCCESS', data })\n  } catch (error) {\n    console.log('fetchPackageInfo', error)\n    yield put({ type: 'api/LOAD_PACKAGE_INFO_ERROR', error: error.message })\n    // throw new Error(error)\n  }\n}\n\n// watcher saga: watches for actions dispatched to the store, starts worker saga\nfunction* watcherSaga() {\n  yield takeLatest('api/LOAD_PACKAGE_INFO', fetchPackageInfo)\n}\n\nconst sagas = {\n  watcherSaga,\n  fetchPackageInfo\n}\n\n// define all action/reducer pairs here... add 'type' attributes for\nexport const actionReducers = [\n  {\n    loadPackageInfo: () => ({ type: 'api/LOAD_PACKAGE_INFO' }),\n    reducer: state => state.set('package', new Resource({ isLoading: true, data: state.getIn([ 'package', 'data' ]) }))\n  },\n  {\n    loadPackageInfoSuccess: data => ({ type: 'api/LOAD_PACKAGE_INFO_SUCCESS', data }),\n    reducer: (state, action) => state\n                                  .set('package', new Resource({ isLoading: false, success: true, data: action.data }))\n                                  .update('timesLoaded', count => count + 1)\n  },\n  {\n    loadPackageInfoError: error => ({ type: 'api/LOAD_PACKAGE_INFO_ERROR', error }),\n    reducer: (state, action) => state.set('package', new Resource({ error: action.error, success: false }))\n  },\n]\n\nexport default automap({ sagas, namespace, actionReducers, initialState, selectors })\n","import { automap } from 'redux-automap'\n\nexport const namespace = 'route'\n\n// initial state for reducer\nexport const initialState = '/'\n\n// define all action/reducer pairs here... add \"type\" attributes for\nexport const actionReducers = [\n  {\n    change: path => ({ type: 'route/CHANGE', path }),\n    reducer: (state, action) => action.path,\n  },\n]\n\nexport default automap({ namespace, actionReducers, initialState })\n","import { fromJS } from 'immutable'\nimport { automap } from 'redux-automap'\nimport { createSelector } from 'reselect'\nimport { Group, GroupedTag } from './dashboards.models'\n\nexport const namespace = 'dashboards'\n\nconst getTags = state => state.get('tags')\nconst getGroups = state => state.get('groups')\nconst findTag = (state, id) => state\n                                .get('tags')\n                                .find(tag => tag.get('id') === id)\nconst findGroup = (state, id) => state\n                                .get('groups')\n                                .find(group => group.get('id') === id)\nconst getLastId = items => items.maxBy(i => i.get('id')).get('id')\n// const getLastTagID = createSelector(getTags, getLastId)\nconst getLastGroupID = createSelector(getGroups, getLastId)\n\nexport const selectors = {\n  getTags, findTag\n}\n\n// initial state for reducer\nexport const initialState = fromJS({\n  tags: [\n    { id: 1, name: 'foo' },\n    { id: 2, name: 'bar' },\n    { id: 3, name: 'baz' },\n    { id: 4, name: 'cat' },\n    { id: 5, name: 'miffles' },\n    { id: 6, name: 'vlad' },\n    { id: 7, name: 'baxter' },\n  ],\n  groups: [\n    new Group({ id: 1, name: 'First Group' })\n  ]\n})\n\n// define all action/reducer pairs here... add \"type\" attributes for\nexport const actionReducers = [\n  {\n    addGroup: (name, parent) => ({ type: 'list/ADD_GROUP', name, parent }),\n    reducer: (state, action) => {\n      let nextID = getLastGroupID(state) + 1\n\n      return state.update('groups', groups => groups.push(\n        new Group({ id: nextID, name: action.name, parent: action.parent })\n      ))\n    }\n  },\n  {\n    addTagToGroup: (tagID, groupID) => ({ type: 'list/ADD_TAG_TO_GROUP', tagID, groupID }),\n    reducer: (state, action) => {\n      let tag = findTag(state, action.tagID)\n      let matchedGroup = findGroup(state, action.groupID)\n\n      // console.log('matched tag', tag.toJS())\n      // console.log('matched group', matchedGroup.toJS())\n\n      if (!tag) throw new Error(`no tag found with id=${action.tagID}`, action)\n      if (!matchedGroup) throw new Error(`no group found with id=${action.groupID}`, action)\n\n      return state\n              .update('groups',\n                groups => groups.map(\n                  group => group === matchedGroup\n                            ? group.update('tags', tags => tags.push(new GroupedTag({ id: tag.get('id'), name: tag.get('name') })))\n                            : group\n                )\n              )\n    }\n  },\n]\n\nexport default automap({ namespace, actionReducers, initialState, selectors })\n","import { Record, List } from 'immutable'\n\n// initial state for reducer\nexport const Group = new Record({\n  id: undefined,\n  path: [ 'Assets', 'Region 1', 'Pumps' ],\n  name: 'New Group',\n  parent: undefined,\n  tags: new List(),\n})\n\n// initial state for reducer\nexport const Tag = new Record({\n  id: undefined,\n  name: 'New Tag',\n})\n\nexport const GroupedTag = new Record({\n  id: undefined,\n  name: 'New Grouped Tag',\n})\n\n// initial state for reducer\nexport default { Group, Tag, GroupedTag }\n","import { fromJS } from 'immutable'\nimport { automap } from 'redux-automap'\nimport { createSelector } from 'reselect'\nimport axios from 'axios'\nimport { call, put, takeLatest } from 'redux-saga/effects'\nimport { Tag, ApiResource, Stream } from './tags.models'\nimport streamingSaga from './tags.streaming'\n\nexport const namespace = 'tags'\n\nconst getTags = state => state.get('all')\nconst getTagById = (items, id) => items.find(item => item.get('id') === id)\nconst onlyActive = items => items.filter(item => item.get('isActive'))\nconst getActiveTags = createSelector(getTags, onlyActive)\nconst getEditingTagID = state => state.get('editingTag')\nconst asTreeData = items => getTreeFromFlatData({ flatData: items })\nconst getEditingTag = state => createSelector(getTags, getEditingTagID, getTagById)\n\nconst selectors = {\n  getTags, getActiveTags, getEditingTag, getEditingTagID\n}\n\n// initial state for reducer\nexport const initialState = fromJS({\n  tagsLoader: new ApiResource(),\n  streamStatus: new Stream(),\n  editingTag: false,\n  all: [\n    { id: 1, order: 1, name: 'foo', created: new Date(), updated: new Date(), isActive: true, values: [] },\n    { id: 2, order: 2, name: 'bar', created: new Date(), updated: new Date(), isActive: true, values: [] },\n    { id: 3, order: 3, name: 'baz', created: new Date(), updated: new Date(), isActive: true, values: [] },\n    { id: 4, order: 4, name: 'cat', created: new Date(), updated: new Date(), isActive: false, values: [] },\n    { id: 5, order: 5, name: 'miffles', created: new Date(), updated: new Date(), isActive: false, values: [] },\n    { id: 6, order: 6, name: 'vlad', created: new Date(), updated: new Date(), isActive: true, values: [] },\n    { id: 7, order: 7, name: 'baxter', created: new Date(), updated: new Date(), isActive: true, values: [] },\n  ],\n})\n\nfunction* fetchTags() {\n  try {\n    const data = yield call(() => axios.get('/api/tags').then(r => fromJS(r.data)))\n    yield put({ type: 'tags/LOAD_TAGS_SUCCESS', data })\n  } catch (error) {\n    console.log('fetchTags', error)\n    yield put({ type: 'tags/LOAD_TAGS_ERROR', error: error.message })\n  }\n}\n\n// watcher saga: watches for actions dispatched to the store, starts worker saga\nfunction* watcherSaga() {\n  yield takeLatest('tags/LOAD_TAGS', fetchTags)\n}\n\nconst sagas = {\n  watcherSaga,\n  fetchTags,\n  streamingSaga\n}\n\n// define all action/reducer pairs here... add \"type\" attributes for\nexport const actionReducers = [\n  {\n    connectStream: () => ({ type: 'tags/stream/CONNECT' }),\n    reducer: state => state.setIn(['streamStatus', 'isConnected'], false)\n  },\n  {\n    connectStreamSuccess: () => ({ type: 'tags/stream/CONNECT_SUCCESS' }),\n    reducer: state => state.setIn(['streamStatus', 'isConnected'], true)\n  },\n  {\n    disconnectStream: () => ({ type: 'tags/stream/DISCONNECT' }),\n    reducer: (state, action) => state.setIn(['streamStatus', 'isConnected'], false)\n  },\n  {\n    updateTagFromStream: (id, values) => ({ type: 'tags/stream/UPDATE', id, values }),\n    reducer: (state, action) => state.update('all', all => all.map(tag => tag.get('id') === action.id ? tag.set('values', action.values) : tag))\n  },\n  {\n    loadTags: () => ({ type: 'tags/LOAD_TAGS' }),\n    reducer: state => state.set('tagsLoader', new ApiResource({ isLoading: true }))\n  },\n  {\n    loadTagsSuccess: data => ({ type: 'tags/LOAD_TAGS_SUCCESS', data }),\n    reducer: (state, action) => state\n                                  .set('tagsLoader', new ApiResource({ success: true }))\n                                  .set('all', action.data.map(item => new Tag(item)))\n  },\n  {\n    loadTagsError: error => ({ type: 'tags/LOAD_TAGS_ERROR', error }),\n    reducer: (state, action) => state.set('tagsLoader', new ApiResource({ error: action.error }))\n  },\n  {\n    setEditingTag: id => ({ type: 'tags/SET_EDITING_TAG', id }),\n    reducer: (state, action) => state.set('editingTag', action.id)\n  },\n  {\n    unsetEditingTag: id => ({ type: 'tags/UNSET_EDITING_TAG' }),\n    reducer: (state, action) => state.set('editingTag', false)\n  },\n  {\n    editTag: (id, values) => ({ type: 'tags/EDIT_TAG', id, values }),\n    reducer: (state, action) => state\n                                  .set('editingTag', false)\n                                  .update('all',\n                                    tags => tags.map(tag =>\n                                      tag.get('id') === action.id ? tag.merge(action.values) : tag\n                                    )\n                                  )\n  }\n]\n\nexport default automap({ namespace, actionReducers, initialState, selectors, sagas })\n","import { Record, List } from 'immutable'\n\nexport const Tag = new Record({\n  id: undefined,\n  name: 'new tag',\n  created: undefined,\n  updated: undefined,\n  isActive: true,\n  isWatching: true,\n  values: List()\n})\n\nexport const ApiResource = Record({\n  isLoading: false,\n  success: false,\n  error: undefined,\n})\n\nexport const Stream = Record({\n  isConnected: false,\n  lastMessageReceived: undefined,\n  error: undefined,\n})\n","import io from 'socket.io-client'\nimport { eventChannel } from 'redux-saga'\nimport { fork, take, call, put, all, cancel } from 'redux-saga/effects'\n\nimport tags from './tags'\nconst CHANNEL_NAME = '/tags'\n\nfunction connect(channel) {\n  console.log('connecting to socket channel', channel)\n  const socket = io()\n  return new Promise((resolve) => {\n    socket.on('connect', () => {\n      console.log('connected to socket server')\n      resolve(socket)\n    })\n  })\n}\n\nfunction subscribe(socket) {\n  return eventChannel((emit) => {\n    socket.on('tags/update', (data) => {\n      emit(data)\n    })\n    socket.on('disconnect', () => {\n      console.warn('socket disconnected')\n    })\n    return () => { }\n  })\n}\n\nfunction* listen(socket) {\n  const channel = yield call(subscribe, socket)\n  while (true) {\n    const { id, values } = yield take(channel)\n    // console.log(`receiving data from channel ${CHANNEL_NAME}`, id, values)\n    yield put(tags.updateTagFromStream(id, values ))\n  }\n}\n\nexport default function* streamingSaga() {\n  while (true) {\n    // Wait until connect requested\n    yield take('tags/stream/CONNECT')\n\n    // Create a socket connection\n    const socket = yield call(connect, CHANNEL_NAME)\n    yield put(tags.connectStreamSuccess())\n    /*\n      Parallelize the following tasks, and continue:\n        - listen for socket events\n        - wait for user to start a signal stream\n        - wait for user to stop a signal stream\n    */\n    const tasks = yield all([\n      fork(listen, socket),\n    ])\n\n    // Wait until disconnect requested\n    yield take('tags/stream/DISCONNECT')\n\n    // Close the socket connection\n    socket.emit('disconnect')\n    socket.close()\n\n    // stop each task\n    // yield cancel(...tasks)\n  }\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Navigation, { routes } from './Nav'\n\nconst App = () =>\n  <div>\n    <h1>FuseBox Workflow Demo</h1>\n    <Navigation />\n    <div className=\"page-content\">\n      <Switch>\n        {\n          routes.map(route => <Route\n                                key={route.path}\n                                path={route.path}\n                                component={route.component}\n                              />\n          )\n        }\n        <Redirect from=\"/\" exact to={routes.length && routes[0].path} />\n      </Switch>\n    </div>\n  </div>\n\nexport default App\n","import React from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom'\n\n// pages\nimport { ConnectedEditGroups } from './pages/Groups/EditGroups'\nimport { ConnectedPackage } from './pages/Package'\nimport Tags from './pages/Tags'\n\nexport const routes = [\n  { path: '/list', name: 'Groups', component: ConnectedEditGroups },\n  { path: '/package', name: 'Package', component: ConnectedPackage },\n  { path: '/groups', name: 'Streaming Tags', component: Tags },\n]\n\nexport const Nav = () =>\n  <Menu pointing secondary className=\"navigation\">\n    {\n      routes.map(route => <Menu.Item\n                            key={route.path}\n                            to={route.path}\n                            name={route.name}\n                            as={NavLink}\n                          />)\n    }\n  </Menu>\n\nexport default Nav\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fromImmutable } from 'react-wrappers'\nimport { Divider, Table } from 'semantic-ui-react'\nimport GroupRow from './GroupRow'\nimport AddGroup from './AddGroup'\nimport GroupOrder from './GroupOrder'\nimport groups from '../../../state/groups'\n\nconst EditGroups = ({ groups = [], groupsTreeData, addGroup, removeGroup, toggleIsActive, reorderGroups, editGroup }) => {\n  return (\n    <React.Fragment>\n      <AddGroup addGroup={addGroup} />\n      <Divider horizontal>{ groups.length } Items</Divider>\n\n      {\n        /*\n          <Table compact celled definition>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell />\n                <Table.HeaderCell>Id</Table.HeaderCell>\n                <Table.HeaderCell>Name</Table.HeaderCell>\n                <Table.HeaderCell>Created</Table.HeaderCell>\n                <Table.HeaderCell>Active</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {\n                groups.map(group => <GroupRow\n                                    key={group.id}\n                                    group={group}\n                                    removeGroup={() => removeGroup(group.id)}\n                                    toggleIsActive={() => toggleIsActive(group.id)}\n                                  />\n                          )\n              }\n            </Table.Body>\n          </Table>\n        */\n      }\n\n\n      <GroupOrder\n        groups={groups}\n        treeData={groupsTreeData}\n        reorderGroups={reorderGroups}\n        editGroup={editGroup}\n      />\n    </React.Fragment>\n  )\n}\n\nEditGroups.propTypes = {\n  groups: PropTypes.array.isRequired,\n  addGroup: PropTypes.func.isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  toggleIsActive: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  groups: groups.getGroups(state),\n  groupsTreeData: groups.getTreeData(state)\n})\n\nexport const ConnectedEditGroups = connect(mapStateToProps, groups.actions)(fromImmutable(EditGroups))\n\nexport default EditGroups\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Table, Checkbox } from 'semantic-ui-react'\nimport humanize from 'humanize-duration'\n\nconst GroupRow = ({ group, removeGroup, toggleIsActive }) =>\n  <Table.Row>\n    <Table.Cell width={1}>\n      <Button\n        circular\n        fluid\n        icon=\"trash\"\n        size=\"mini\"\n        onClick={removeGroup}\n        disabled={group.isActive}\n        />\n    </Table.Cell>\n    <Table.Cell width={1}>{ group.id }</Table.Cell>\n    <Table.Cell>{ group.title }</Table.Cell>\n    <Table.Cell>created { humanize(new Date() - group.date, { round: true }) } ago</Table.Cell>\n    <Table.Cell width={1}>\n      <Checkbox\n        toggle\n        checked={group.isActive}\n        onClick={toggleIsActive}\n        />\n    </Table.Cell>\n  </Table.Row>\n\nGroupRow.propTypes = {\n  group: PropTypes.object.isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  toggleIsActive: PropTypes.func.isRequired,\n}\n\nexport default GroupRow\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Input, Form } from 'semantic-ui-react'\n\nclass AddGroup extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { value: 'foo' }\n    this.update = this.update.bind(this)\n    this.addGroup = this.addGroup.bind(this)\n  }\n\n  update(e) {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  addGroup() {\n    let groupName = this.state.value || 'new item'\n    this.props.addGroup(groupName)\n    this.setState({ value: '' })\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.addGroup}>\n        <Input\n          fluid\n          placeholder=\"New Group\"\n          action={{ labelPosition: 'right', icon: 'plus', content: 'Add Group' }}\n          actionPosition='left'\n          onChange={this.update}\n          value={this.state.value}\n          />\n      </Form>\n    )\n  }\n}\n\nAddGroup.propTypes = {\n  addGroup: PropTypes.func.isRequired\n}\n\nexport default AddGroup\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport SortableTree, { getFlatDataFromTree } from 'react-sortable-tree'\nimport 'react-sortable-tree/style.css'\n\nimport EditableGroup from './EditableGroup'\n\nclass GroupOrder extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.orderChanged = this.orderChanged.bind(this)\n  }\n\n  orderChanged(treeData) {\n    const { reorderGroups } = this.props\n    const flat = getFlatDataFromTree({\n      treeData,\n      getNodeKey: ({ node }) => node.id,\n      ignoreCollapsed: false\n    })\n\n    const remapped = flat.map(group => ({\n      id: group.node.id,\n      expanded: group.node.expanded,\n      parentId: group.parentNode && group.parentNode.id,\n    }))\n\n    // console.log('tree changed', treeData)\n    // console.log('flat', flat)\n    // console.log('remapped', remapped)\n    // console.log('reorderGroups', reorderGroups)\n\n    reorderGroups(remapped)\n  }\n\n  render() {\n    const { treeData, editGroup } = this.props\n\n    return (\n      <SortableTree\n        className=\"edit-groups-tree\"\n        treeData={treeData}\n        onChange={this.orderChanged}\n        rowHeight={45}\n        generateNodeProps={(node, path) => ({\n          title: <EditableGroup title={node.node.title} id={node.node.id} editGroup={editGroup} />\n        })}\n        />\n    )\n  }\n}\n\nexport default GroupOrder\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withFormik, Field } from 'formik'\nimport { Input } from 'semantic-ui-react'\nimport classNames from 'classnames'\n\nconst EditableGroupForm = ({\n  values,\n  errors,\n  touched,\n  handleChange,\n  handleBlur,\n  handleSubmit,\n  isSubmitting,\n  dirty\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        id={values.id}\n        transparent\n        className={classNames(\"editable-groupname\", { dirty })}\n        name=\"title\"\n        onChange={handleChange}\n        placeholder=\"Group Name\"\n        value={values.title}\n      />\n    </form>\n  )\n}\n\nexport default withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({ title, id, editGroup }) => ({ title, id, editGroup }),\n  handleSubmit: (values, { props, setSubmitting, setErrors }) => {\n    props.editGroup(props.id, { title: values.title })\n  },\n})(EditableGroupForm)\n\n\n/*\n\n\n\n<input\n          className=\"ui input fluid\"\n          type=\"text\"\n          onChange={handleChange}\n          onBlur={handleSubmit}\n          value={values.title}\n          name=\"title\"\n        />\n\n\n*/\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { fromImmutable } from 'react-wrappers'\nimport Dependencies from './Dependencies'\nimport ErrorMessage from '../../messages/ErrorMessage'\nimport api from '../../../state/api'\n\nconst Package = ({ pkg, deps, devDeps, timesLoaded, loadPackageInfo }) =>\n  <div className=\"package-loader\">\n    <Button fluid disabled={pkg.isLoading} onClick={loadPackageInfo} loading={pkg.isLoading}>\n      { deps.length ? `Reload Package (loaded ${timesLoaded} times)` : 'Load Package' }\n    </Button>\n    { deps.length > 0 && <Dependencies deps={deps} devDeps={devDeps} /> }\n    { pkg.error && <ErrorMessage message={pkg.error} /> }\n  </div>\n\nPackage.propTypes = {\n  pkg: PropTypes.object.isRequired,\n  deps: PropTypes.array,\n  devDeps: PropTypes.array,\n  timesLoaded: PropTypes.number.isRequired,\n  loadPackageInfo: PropTypes.func.isRequired,\n}\n\nPackage.defaultProps = {\n  deps: [],\n  devDeps: []\n}\n\nconst mapStateToProps = state => ({\n  pkg: api.getPackage(state),\n  deps: api.getDependenciesAsArray(state),\n  devDeps: api.getDevDependenciesAsArray(state),\n  timesLoaded: api.getTimesLoaded(state),\n})\n\nexport const ConnectedPackage = connect(mapStateToProps, {\n  loadPackageInfo: api.actions.loadPackageInfo\n})(fromImmutable(Package))\n\nexport default Package\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Message } from 'semantic-ui-react'\nimport List from './List'\n\nconst Dependencies = ({ deps, devDeps }) =>\n  <Message positive>\n    <Grid columns={2} divided>\n      <Grid.Row>\n        <Grid.Column>\n          <List name=\"Dependencies\" libs={deps} />\n        </Grid.Column>\n        <Grid.Column>\n          <List name=\"Dev. Dependencies\" libs={devDeps} />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </Message>\n\nDependencies.propTypes = {\n  deps: PropTypes.array,\n  devDeps: PropTypes.array,\n}\n\nDependencies.defaultProps = {\n  deps: [],\n  devDeps: [],\n}\n\nexport default Dependencies\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { List, Statistic } from 'semantic-ui-react'\n\nconst PackageList =({ name, libs = [] }) =>\n  <div>\n    <Statistic horizontal color=\"green\" label={name} value={libs.length} />\n    <List>\n      {\n        libs.map(lib => (\n          <List.Item key={lib.name}><b>{ lib.name }</b>: { lib.version }</List.Item>\n        ))\n      }\n    </List>\n  </div>\n\nPackageList.propTypes = {\n  name: PropTypes.string.isRequired,\n  libs: PropTypes.array,\n}\n\nPackageList.defaultProps = {\n  libs: [],\n}\n\nexport default PackageList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Message } from 'semantic-ui-react'\n\nconst ErrorMessage = ({ message, children }) =>\n  <Message negative>\n    <Message.Header>We&lsquo;ve encountered an error.</Message.Header>\n    <p>{ message || children }</p>\n  </Message>\n\nErrorMessage.propTypes = {\n  message: PropTypes.string,\n  children: PropTypes.element\n}\n\nErrorMessage.defaultProps = {\n  message: undefined,\n  children: undefined\n}\n\nexport default ErrorMessage\n","import React from 'react'\nimport { Grid, Container, Sidebar, Segment, Menu, Card } from 'semantic-ui-react'\nimport { ConnectedGroups } from '../Groups'\nimport { ConnectedTagsList } from './TagsList'\n\nconst cards = Array(7).fill(0).map(i => ({ name: `Tag #${Math.random().toString().slice(0, 6)}` }))\n\nconst Groups = () =>\n  <Grid divided>\n    <Grid.Row>\n      <Grid.Column width={5}>\n        <ConnectedGroups />\n      </Grid.Column>\n      <Grid.Column width={11}>\n        <ConnectedTagsList />\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n\nexport default Groups\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fromImmutable } from 'react-wrappers'\nimport { Container, Button } from 'semantic-ui-react'\nimport groups from '../../../state/groups'\nimport { ConnectedGroupsNavigation } from './GroupsNavigation'\nimport { ConnectedEditGroups } from './EditGroups'\n\nconst Groups = ({ isEditing, toggleIsEditing }) =>\n  <Container className=\"groups-panel\">\n    <Button\n      basic\n      circular\n      compact\n      className=\"edit-button selectable abs-top-right\"\n      icon=\"pencil\"\n      onClick={toggleIsEditing}\n    />\n\n    { isEditing ? <ConnectedEditGroups /> : <ConnectedGroupsNavigation /> }\n  </Container>\n\n\nGroups.propTypes = {\n  isEditing: PropTypes.bool.isRequired,\n  toggleIsEditing: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  isEditing: groups.getIsEditing(state),\n})\n\nexport const ConnectedGroups = connect(mapStateToProps, groups.actions)(fromImmutable(Groups))\n\nexport default Groups\n","import React from 'react'\nimport SortableTree from 'react-sortable-tree'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fromImmutable } from 'react-wrappers'\nimport groups from '../../../state/groups'\nimport SelectableGroup from './SelectableGroup'\n\nconst GroupsNavigation = ({ treeData, toggleGroupExpanded, setVisibleGroup }) =>\n  <SortableTree\n    className=\"tag-groups-tree\"\n    treeData={treeData}\n    onChange={() => {}}\n    rowHeight={48}\n    onVisibilityToggle={({ node, expanded }) => toggleGroupExpanded(node.id)}\n    generateNodeProps={({ node }, path) => ({\n      title: <SelectableGroup\n                selectGroupAction={() => setVisibleGroup(node.id)}\n                id={node.id}\n                active={node.isVisible}\n                title={node.title}\n              />\n    })}\n    onClick={() => alert('clicked')}\n    canDrag={false}\n    />\n\nconst mapStateToProps = state => ({\n  treeData: groups.getTreeData(state)\n})\n\nexport const ConnectedGroupsNavigation = connect(mapStateToProps, groups.actions)(fromImmutable(GroupsNavigation))\n\nexport default GroupsNavigation\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { NavLink } from 'react-router-dom'\n\nconst SelectableGroup = ({ title, id, active, selectGroupAction }) =>\n  <div\n    to={`/groups/${id}`}\n    className={classNames('group', 'selectable', active && 'active')}\n    onClick={selectGroupAction}\n  >{title}</div>\n\nSelectableGroup.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  active: PropTypes.bool.isRequired,\n  selectGroupAction: PropTypes.func.isRequired,\n}\n\nexport default SelectableGroup\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fromImmutable } from 'react-wrappers'\nimport { Card, Header } from 'semantic-ui-react'\nimport tags from '../../../state/tags'\nimport groups from '../../../state/groups'\nimport Chart from './HighChart'\nimport AllowEdit from './AllowEdit'\nimport Breadcrumbs from './Breadcrumbs'\n\nconst TagsList = ({ tags, setEditingTag, editingTagID, unsetEditingTag, editTag, activeGroup, breadcrumbs, setVisibleGroup }) => {\n  // console.log('trail', breadcrumbs)\n  return (\n    <React.Fragment>\n      <Breadcrumbs className=\"group-breadcrumbs\" breadcrumbs={breadcrumbs} clickHandler={setVisibleGroup} />\n      <Card.Group className=\"tags\" itemsPerRow={3}>\n        {\n          tags.map(tag =>\n            <Card raised className=\"tag\" key={tag.name}>\n              <Card.Header>\n                <Header floated=\"left\" textAlign=\"center\">{tag.name}</Header>\n                <AllowEdit\n                  tag={tag}\n                  isEditing={tag.id === editingTagID}\n                  enterEditMode={() => setEditingTag(tag.id)}\n                  exitEditMode={unsetEditingTag}\n                  saveTagAction={editTag}\n                />\n              </Card.Header>\n              <Card.Content>\n                <Chart\n                  tag={tag}\n                  values={tag.values}\n                  min={-20}\n                  max={20}\n                  setEditingTag={() => setEditingTag(tag.id)}\n                />\n              </Card.Content>\n            </Card>\n          )\n        }\n      </Card.Group>\n    </React.Fragment>\n  )\n}\n\n\nTagsList.propTypes = {\n  tags: PropTypes.array.isRequired,\n  // addItem: PropTypes.func.isRequired,\n  // removeItem: PropTypes.func.isRequired,\n  // toggleIsActive: PropTypes.func.isRequired,\n}\n\nTagsList.defaultProps = {\n  tags: []\n}\n\nconst mapStateToProps = state => ({\n  tags: tags.getActiveTags(state),\n  activeGroup: groups.getVisibleGroup(state),\n  breadcrumbs: groups.getBreadcrumbs(state),\n  editingTagID: tags.getEditingTagID(state),\n})\n\nexport const ConnectedTagsList = connect(mapStateToProps,\n  Object.assign({}, tags.actions, groups.actions)\n)(fromImmutable(TagsList))\n\nexport default TagsList\n","import React from 'react'\nimport ReactHighcharts from 'react-highcharts'\nimport moment from 'moment'\n\nvar config = {\n  chart: {\n    type: 'spline'\n  },\n  title: {\n    text: undefined\n  },\n  credits: {\n    enabled: false\n  },\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: { // don't display the dummy year\n      month: '%e. %b',\n      year: '%b'\n    },\n    title: '',\n  },\n  yAxis: {\n    title: '',\n  },\n  series: [{\n    data: Array(50).fill(0),\n  }],\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    spline: {\n      marker: {\n        enabled: false\n      }\n    }\n  }\n}\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n    // this.chart = this.chart.getChart()\n    // console.log('this.chart', this.chart)\n  }\n\n  componentWillReceiveProps(next) {\n    const chart = this.chart.getChart()\n    const newValues = next.values.map(v => [v.date, v.value])\n    // console.log('rendering new values', newValues)\n    // console.log('this.chart', chart)\n    chart.series[0].addPoint(newValues.pop(), true, true, false)\n  }\n\n  render() {\n    return(\n      <div className=\"tag\">\n        <ReactHighcharts config={config} isPureConfig={true} ref={ref => this.chart = ref} />\n      </div>\n    )\n  }\n}\n\nexport default Chart\n","import React from 'react'\nimport { Icon, Dialog, Button, Modal } from 'semantic-ui-react'\n\nconst AllowEdit = ({ tag, isEditing, enterEditMode, exitEditMode, saveTagAction }) => {\n  return (\n    <React.Fragment>\n      <Button\n        basic\n        circular\n        compact\n        className=\"edit-button\"\n        floated=\"right\"\n        icon=\"pencil\"\n        onClick={enterEditMode}\n      />\n\n      <Modal size=\"small\" open={isEditing} onClose={exitEditMode}>\n        <Modal.Header>Edit Tag > { tag.name }</Modal.Header>\n        <Modal.Content>\n          <p>Some edit content forms would go here.</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic onClick={exitEditMode}>Cancel</Button>\n          <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => saveTagAction(tag.id, tag)} />\n        </Modal.Actions>\n      </Modal>\n    </React.Fragment>\n  )\n}\n\nexport default AllowEdit\n","import React from 'react'\nimport { Breadcrumb } from 'semantic-ui-react'\n\nexport default ({ breadcrumbs, clickHandler, ...other }) =>\n  <Breadcrumb {...other}>\n    {\n      breadcrumbs.map(item =>\n        <React.Fragment key={item.id}>\n          <Breadcrumb.Section\n            active={item.isVisible}\n            onClick={() => clickHandler(item.id)}>\n            {item.title}\n          </Breadcrumb.Section>\n          { !item.isVisible && <Breadcrumb.Divider icon='right angle' /> }\n        </React.Fragment>\n      )\n    }\n  </Breadcrumb>\n"]}