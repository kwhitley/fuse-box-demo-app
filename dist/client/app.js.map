{"version":3,"sources":["/client/index.jsx","/client/state/index.js","/client/state/groups.js","/client/state/api.js","/client/state/route.js","/client/state/dashboards.js","/client/state/dashboards.models.js","/client/state/tags.js","/client/state/tags.models.js","/client/state/tags.streaming.js","/client/components/App.jsx","/client/components/Nav.jsx","/client/components/pages/Groups/index.jsx","/client/components/pages/Groups/GroupRow.jsx","/client/components/pages/Groups/AddGroup.jsx","/client/components/pages/Groups/GroupOrder.jsx","/client/components/pages/Groups/EditableGroup.jsx","/client/components/pages/Package/index.jsx","/client/components/pages/Package/Dependencies.jsx","/client/components/pages/Package/List.jsx","/client/components/messages/ErrorMessage.jsx","/client/components/pages/Tags/index.jsx","/client/components/pages/Tags/GroupsNavigation.jsx","/client/components/pages/Tags/TagsList.jsx","/client/components/pages/Tags/HighChart.jsx","/client/components/pages/Tags/AllowEdit.jsx"],"names":["history","sagaMiddleware","rootReducer","mergedReducers","store","window","__REDUX_DEVTOOLS_EXTENSION__","listen","path","location","pathname","search","hash","dispatch","route","actions","change","dashboards","addGroup","addTagToGroup","run","api","sagas","watcherSaga","tags","streamingSaga","loadTags","connectStream","ReactDom","render","document","getElementById","groups","namespace","getGroups","state","get","getNumGroups","size","getHalfGroups","number","slice","Math","floor","asTreeData","flatData","toJS","rootKey","getTreeData","getGroupsSorted","sort","A","B","a","b","reverse","getHalfGroupsUnsorted","getHalfGroupsSorted","selectors","Group","Record","id","undefined","parentId","title","date","Date","isActive","expanded","initialState","all","actionReducers","type","reducer","action","nextID","maxBy","i","update","push","toggleIsActive","map","group","active","editGroup","values","merge","removeGroup","filter","toggleGroupExpanded","reorderGroups","parentsMap","find","g","set","fetchPackageInfo","byName","name","toDepsArray","deps","version","getPackage","getIn","getTimesLoaded","getDependencies","getDevDependencies","getDependenciesAsArray","getDevDependenciesAsArray","Resource","isLoading","success","error","data","package","timesLoaded","axios","then","r","console","log","message","loadPackageInfo","loadPackageInfoSuccess","count","loadPackageInfoError","getTags","findTag","tag","findGroup","getLastId","items","getLastGroupID","parent","tagID","groupID","matchedGroup","Error","GroupedTag","List","Tag","fetchTags","getTagById","item","onlyActive","getActiveTags","getEditingTagID","getTreeFromFlatData","getEditingTag","tagsLoader","ApiResource","streamStatus","Stream","editingTag","order","created","updated","setIn","connectStreamSuccess","disconnectStream","updateTagFromStream","loadTagsSuccess","loadTagsError","setEditingTag","unsetEditingTag","editTag","isWatching","isConnected","lastMessageReceived","CHANNEL_NAME","connect","channel","socket","resolve","on","subscribe","emit","warn","tasks","close","App","routes","component","length","ConnectedGroupsList","ConnectedPackage","Tags","Nav","NavLink","GroupsList","groupsTreeData","propTypes","PropTypes","array","isRequired","func","mapStateToProps","GroupRow","round","object","AddGroup","props","value","bind","e","setState","target","groupName","labelPosition","icon","content","React","Component","GroupOrder","orderChanged","treeData","flat","getNodeKey","node","ignoreCollapsed","remapped","parentNode","EditableGroupForm","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","dirty","enableReinitialize","mapPropsToValues","setSubmitting","setErrors","Package","pkg","devDeps","defaultProps","Dependencies","PackageList","libs","lib","string","ErrorMessage","children","element","cards","Array","fill","random","toString","Groups","GroupsNavigation","ConnectedGroupsNavigation","TagsList","editingTagID","ConnectedTagsList","config","chart","text","credits","enabled","xAxis","dateTimeLabelFormats","month","year","yAxis","series","legend","plotOptions","spline","marker","Chart","next","getChart","newValues","v","addPoint","pop","ref","AllowEdit","isEditing","enterEditMode","exitEditMode","saveTagAction"],"mappings":"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","file":"","sourcesContent":["import 'semantic-ui-css/semantic.min.css'\n// import 'antd/dist/antd.min.css'\n\nimport React from 'react'\nimport ReactDom from 'react-dom'\n\nimport { combineReducers } from 'redux-immutable'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport createSagaMiddleware from 'redux-saga'\nimport createHistory from 'history/createBrowserHistory'\n\nimport mergedReducers from './state'\nimport App from './components/App'\nimport api from './state/api'\nimport tags from './state/tags'\nimport route from './state/route'\nimport dashboards from './state/dashboards'\nimport './styles/base.scss'\nimport './styles/base.less'\n\nconst history = createHistory()\nconst sagaMiddleware = createSagaMiddleware()\nconst rootReducer = combineReducers(mergedReducers)\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(sagaMiddleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  )\n)\n\n// history binding... messy, abstract elsewhere or turn into module\nhistory.listen(location => {\n  let path = `${location.pathname}${location.search}${location.hash}`\n  store.dispatch(route.actions.change(path))\n})\n\nstore.dispatch(dashboards.addGroup('Newish Group', 1))\nstore.dispatch(dashboards.addTagToGroup(6, 2))\n\nlet path = `${location.pathname}${location.search}${location.hash}`\nstore.dispatch(route.actions.change(path))\n\n// register sagas\nsagaMiddleware.run(api.sagas.watcherSaga)\nsagaMiddleware.run(tags.sagas.watcherSaga)\nsagaMiddleware.run(tags.sagas.streamingSaga)\nstore.dispatch(tags.loadTags())\nstore.dispatch(tags.connectStream())\n\nReactDom.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('app')\n)\n","import { merge } from 'redux-automap'\nimport groups from './groups'\nimport api from './api'\nimport route from './route'\nimport dashboards from './dashboards'\nimport tags from './tags'\n\nexport default merge([ groups, api, route, dashboards, tags ])\n","import { fromJS, List, Record } from 'immutable'\nimport { automap } from 'redux-automap'\nimport { createSelector } from 'reselect'\nimport { getTreeFromFlatData } from 'react-sortable-tree'\n\nexport const namespace = 'groups'\n\nconst getGroups = state => state.get('all')\nconst getNumGroups = state => state.get('all').size\nconst getHalfGroups = (groups, number) => groups.slice(0, Math.floor(number / 2))\nconst asTreeData = groups => getTreeFromFlatData({ flatData: groups.toJS(), rootKey: null })\nconst getTreeData = createSelector(getGroups, asTreeData)\n\nconst getGroupsSorted = createSelector(\n  [ getGroups ],\n  groups => groups.sort((A, B) => {\n    const a = B.get('title')\n    const b = A.get('title')\n\n    return a < b ? -1 : (a > b ? 1 : 0)\n  }).reverse()\n)\n\nconst getHalfGroupsUnsorted = createSelector(\n  [ getGroups, getNumGroups ], getHalfGroups\n)\n\nconst getHalfGroupsSorted = createSelector(\n  [ getGroupsSorted, getNumGroups ], getHalfGroups\n)\n\nexport const selectors = {\n  getGroups, getNumGroups, getGroupsSorted, getHalfGroupsUnsorted, getHalfGroupsSorted, getTreeData\n}\n\nconst Group = new Record({\n  id: undefined,\n  parentId: null,\n  title: 'new group',\n  date: new Date(),\n  isActive: false,\n  expanded: false\n})\n\n// initial state for reducer\nexport const initialState = fromJS({\n  all: [\n    new Group({ id: 1, title: 'Asset 1' }),\n    new Group({ id: 2, title: 'Asset 2' }),\n    new Group({ id: 3, parentId: 2, title: 'Pump 1' }),\n    new Group({ id: 4, parentId: 2, title: 'Pump 2' }),\n    new Group({ id: 5, parentId: 4, title: 'Specific Tag Group' }),\n    new Group({ id: 6, title: 'Asset 3' }),\n    new Group({ id: 7, title: 'Asset 4' }),\n  ],\n})\n\n// define all action/reducer pairs here... add \"type\" attributes for\nexport const actionReducers = [\n  {\n    addGroup: (title = 'new group') => ({ type: 'groups/ADD_GROUP', title }),\n    reducer: (state, action) => {\n      let nextID = state.get('all').maxBy(i => i.get('id')).get('id') + 1\n\n      return state.update('all', groups => groups.push(new Group({\n        id: nextID,\n        title: action.title,\n        date: new Date(),\n      })))\n    }\n  },\n  {\n    toggleIsActive: id => ({ type: 'groups/TOGGLE_GROUP_IS_ACTIVE', id }),\n    reducer: (state, action) => state.update('all', groups => groups.map(group => group.get('id') === action.id ? group.update('isActive', active => !active) : group))\n  },\n  {\n    editGroup: (id, values) => ({ type: 'groups/EDIT_GROUP', id, values }),\n    reducer: (state, action) => state.update('all', groups => groups.map(group => group.get('id') === action.id ? group.merge(action.values) : group))\n  },\n  {\n    // type: constants.REMOVE_GROUP,\n    removeGroup: id => ({ type: 'groups/REMOVE_GROUP', id }),\n    reducer: (state, action) => state.update('all', groups => groups.filter(i => i.get('id') !== action.id))\n  },\n  {\n    // type: constants.REMOVE_GROUP,\n    toggleGroupExpanded: id => ({ type: 'groups/TOGGLE_GROUP_EXPANDED', id }),\n    reducer: (state, action) => state.update('all', groups => groups.map(group => group.get('id') === action.id ? group.update('expanded', active => !active) : group))\n  },\n  {\n    // type: constants.REMOVE_GROUP,\n    reorderGroups: parentsMap => ({ type: 'groups/REORDER_GROUPS', parentsMap }),\n    reducer: (state, action) => state\n                                  .update('all',\n                                    groups => List(action.parentsMap.map(\n                                      g => groups\n                                            .find(group => group.get('id') === g.id)\n                                            .set('parentId', g.parentId)\n                                            .set('expanded', g.expanded)\n                                    ))\n                                  )\n  }\n]\n\nexport default automap({ namespace, actionReducers, initialState, selectors })\n","import { fromJS, Record } from 'immutable'\nimport { automap } from 'redux-automap'\nimport { createSelector } from 'reselect'\nimport axios from 'axios'\nimport { call, put, takeLatest } from 'redux-saga/effects'\n\nexport const namespace = 'api'\n\nconst byName = (a, b) => a.name < b.name ? -1 : (a.name > b.name ? 1 : 0)\nconst toDepsArray = deps => deps && Object\n                                      .entries(deps.toJS())\n                                      .map(i => ({ name: i[0], version: i[1] }))\n                                      .sort(byName)\n\nconst getPackage = state => state.getIn(['package'])\nconst getTimesLoaded = state => state.get('timesLoaded')\nconst getDependencies = state => state.getIn([ 'package', 'data', 'dependencies' ])\nconst getDevDependencies = state => state.getIn([ 'package', 'data', 'devDependencies' ])\nconst getDependenciesAsArray = createSelector([ getDependencies ], toDepsArray)\nconst getDevDependenciesAsArray = createSelector([ getDevDependencies ], toDepsArray)\n\nconst selectors = {\n  getPackage,\n  getTimesLoaded,\n  getDependencies,\n  getDevDependencies,\n  getDependenciesAsArray,\n  getDevDependenciesAsArray,\n}\n\nconst Resource = Record({\n  isLoading: false,\n  success: undefined,\n  error: undefined,\n  data: undefined,\n})\n\n// initial state for reducer\nexport const initialState = fromJS({\n  package: new Resource(),\n  timesLoaded: 0,\n})\n\nfunction* fetchPackageInfo() {\n  try {\n    const data = yield call(() => axios.get('/package.json').then(r => fromJS(r.data)))\n    yield put({ type: 'api/LOAD_PACKAGE_INFO_SUCCESS', data })\n  } catch (error) {\n    console.log('fetchPackageInfo', error)\n    yield put({ type: 'api/LOAD_PACKAGE_INFO_ERROR', error: error.message })\n    // throw new Error(error)\n  }\n}\n\n// watcher saga: watches for actions dispatched to the store, starts worker saga\nfunction* watcherSaga() {\n  yield takeLatest('api/LOAD_PACKAGE_INFO', fetchPackageInfo)\n}\n\nconst sagas = {\n  watcherSaga,\n  fetchPackageInfo\n}\n\n// define all action/reducer pairs here... add 'type' attributes for\nexport const actionReducers = [\n  {\n    loadPackageInfo: () => ({ type: 'api/LOAD_PACKAGE_INFO' }),\n    reducer: state => state.set('package', new Resource({ isLoading: true, data: state.getIn([ 'package', 'data' ]) }))\n  },\n  {\n    loadPackageInfoSuccess: data => ({ type: 'api/LOAD_PACKAGE_INFO_SUCCESS', data }),\n    reducer: (state, action) => state\n                                  .set('package', new Resource({ isLoading: false, success: true, data: action.data }))\n                                  .update('timesLoaded', count => count + 1)\n  },\n  {\n    loadPackageInfoError: error => ({ type: 'api/LOAD_PACKAGE_INFO_ERROR', error }),\n    reducer: (state, action) => state.set('package', new Resource({ error: action.error, success: false }))\n  },\n]\n\nexport default automap({ sagas, namespace, actionReducers, initialState, selectors })\n","import { automap } from 'redux-automap'\n\nexport const namespace = 'route'\n\n// initial state for reducer\nexport const initialState = '/'\n\n// define all action/reducer pairs here... add \"type\" attributes for\nexport const actionReducers = [\n  {\n    change: path => ({ type: 'route/CHANGE', path }),\n    reducer: (state, action) => action.path,\n  },\n]\n\nexport default automap({ namespace, actionReducers, initialState })\n","import { fromJS } from 'immutable'\nimport { automap } from 'redux-automap'\nimport { createSelector } from 'reselect'\nimport { Group, GroupedTag } from './dashboards.models'\n\nexport const namespace = 'dashboards'\n\nconst getTags = state => state.get('tags')\nconst getGroups = state => state.get('groups')\nconst findTag = (state, id) => state\n                                .get('tags')\n                                .find(tag => tag.get('id') === id)\nconst findGroup = (state, id) => state\n                                .get('groups')\n                                .find(group => group.get('id') === id)\nconst getLastId = items => items.maxBy(i => i.get('id')).get('id')\n// const getLastTagID = createSelector(getTags, getLastId)\nconst getLastGroupID = createSelector(getGroups, getLastId)\n\nexport const selectors = {\n  getTags, findTag\n}\n\n// initial state for reducer\nexport const initialState = fromJS({\n  tags: [\n    { id: 1, name: 'foo' },\n    { id: 2, name: 'bar' },\n    { id: 3, name: 'baz' },\n    { id: 4, name: 'cat' },\n    { id: 5, name: 'miffles' },\n    { id: 6, name: 'vlad' },\n    { id: 7, name: 'baxter' },\n  ],\n  groups: [\n    new Group({ id: 1, name: 'First Group' })\n  ]\n})\n\n// define all action/reducer pairs here... add \"type\" attributes for\nexport const actionReducers = [\n  {\n    addGroup: (name, parent) => ({ type: 'list/ADD_GROUP', name, parent }),\n    reducer: (state, action) => {\n      let nextID = getLastGroupID(state) + 1\n\n      return state.update('groups', groups => groups.push(\n        new Group({ id: nextID, name: action.name, parent: action.parent })\n      ))\n    }\n  },\n  {\n    addTagToGroup: (tagID, groupID) => ({ type: 'list/ADD_TAG_TO_GROUP', tagID, groupID }),\n    reducer: (state, action) => {\n      let tag = findTag(state, action.tagID)\n      let matchedGroup = findGroup(state, action.groupID)\n\n      // console.log('matched tag', tag.toJS())\n      // console.log('matched group', matchedGroup.toJS())\n\n      if (!tag) throw new Error(`no tag found with id=${action.tagID}`, action)\n      if (!matchedGroup) throw new Error(`no group found with id=${action.groupID}`, action)\n\n      return state\n              .update('groups',\n                groups => groups.map(\n                  group => group === matchedGroup\n                            ? group.update('tags', tags => tags.push(new GroupedTag({ id: tag.get('id'), name: tag.get('name') })))\n                            : group\n                )\n              )\n    }\n  },\n]\n\nexport default automap({ namespace, actionReducers, initialState, selectors })\n","import { Record, List } from 'immutable'\n\n// initial state for reducer\nexport const Group = new Record({\n  id: undefined,\n  path: [ 'Assets', 'Region 1', 'Pumps' ],\n  name: 'New Group',\n  parent: undefined,\n  tags: new List(),\n})\n\n// initial state for reducer\nexport const Tag = new Record({\n  id: undefined,\n  name: 'New Tag',\n})\n\nexport const GroupedTag = new Record({\n  id: undefined,\n  name: 'New Grouped Tag',\n})\n\n// initial state for reducer\nexport default { Group, Tag, GroupedTag }\n","import { fromJS } from 'immutable'\nimport { automap } from 'redux-automap'\nimport { createSelector } from 'reselect'\nimport axios from 'axios'\nimport { call, put, takeLatest } from 'redux-saga/effects'\nimport { Tag, ApiResource, Stream } from './tags.models'\nimport streamingSaga from './tags.streaming'\n\nexport const namespace = 'tags'\n\nconst getTags = state => state.get('all')\nconst getTagById = (items, id) => items.find(item => item.get('id') === id)\nconst onlyActive = items => items.filter(item => item.get('isActive'))\nconst getActiveTags = createSelector(getTags, onlyActive)\nconst getEditingTagID = state => state.get('editingTag')\nconst asTreeData = items => getTreeFromFlatData({ flatData: items })\nconst getEditingTag = state => createSelector(getTags, getEditingTagID, getTagById)\n\nconst selectors = {\n  getTags, getActiveTags, getEditingTag, getEditingTagID\n}\n\n// initial state for reducer\nexport const initialState = fromJS({\n  tagsLoader: new ApiResource(),\n  streamStatus: new Stream(),\n  editingTag: false,\n  all: [\n    { id: 1, order: 1, name: 'foo', created: new Date(), updated: new Date(), isActive: true, values: [] },\n    { id: 2, order: 2, name: 'bar', created: new Date(), updated: new Date(), isActive: true, values: [] },\n    { id: 3, order: 3, name: 'baz', created: new Date(), updated: new Date(), isActive: true, values: [] },\n    { id: 4, order: 4, name: 'cat', created: new Date(), updated: new Date(), isActive: false, values: [] },\n    { id: 5, order: 5, name: 'miffles', created: new Date(), updated: new Date(), isActive: false, values: [] },\n    { id: 6, order: 6, name: 'vlad', created: new Date(), updated: new Date(), isActive: true, values: [] },\n    { id: 7, order: 7, name: 'baxter', created: new Date(), updated: new Date(), isActive: true, values: [] },\n  ],\n})\n\nfunction* fetchTags() {\n  try {\n    const data = yield call(() => axios.get('/api/tags').then(r => fromJS(r.data)))\n    yield put({ type: 'tags/LOAD_TAGS_SUCCESS', data })\n  } catch (error) {\n    console.log('fetchTags', error)\n    yield put({ type: 'tags/LOAD_TAGS_ERROR', error: error.message })\n  }\n}\n\n// watcher saga: watches for actions dispatched to the store, starts worker saga\nfunction* watcherSaga() {\n  yield takeLatest('tags/LOAD_TAGS', fetchTags)\n}\n\nconst sagas = {\n  watcherSaga,\n  fetchTags,\n  streamingSaga\n}\n\n// define all action/reducer pairs here... add \"type\" attributes for\nexport const actionReducers = [\n  {\n    connectStream: () => ({ type: 'tags/stream/CONNECT' }),\n    reducer: state => state.setIn(['streamStatus', 'isConnected'], false)\n  },\n  {\n    connectStreamSuccess: () => ({ type: 'tags/stream/CONNECT_SUCCESS' }),\n    reducer: state => state.setIn(['streamStatus', 'isConnected'], true)\n  },\n  {\n    disconnectStream: () => ({ type: 'tags/stream/DISCONNECT' }),\n    reducer: (state, action) => state.setIn(['streamStatus', 'isConnected'], false)\n  },\n  {\n    updateTagFromStream: (id, values) => ({ type: 'tags/stream/UPDATE', id, values }),\n    reducer: (state, action) => state.update('all', all => all.map(tag => tag.get('id') === action.id ? tag.set('values', action.values) : tag))\n  },\n  {\n    loadTags: () => ({ type: 'tags/LOAD_TAGS' }),\n    reducer: state => state.set('tagsLoader', new ApiResource({ isLoading: true }))\n  },\n  {\n    loadTagsSuccess: data => ({ type: 'tags/LOAD_TAGS_SUCCESS', data }),\n    reducer: (state, action) => state\n                                  .set('tagsLoader', new ApiResource({ success: true }))\n                                  .set('all', action.data.map(item => new Tag(item)))\n  },\n  {\n    loadTagsError: error => ({ type: 'tags/LOAD_TAGS_ERROR', error }),\n    reducer: (state, action) => state.set('tagsLoader', new ApiResource({ error: action.error }))\n  },\n  {\n    setEditingTag: id => ({ type: 'tags/SET_EDITING_TAG', id }),\n    reducer: (state, action) => state.set('editingTag', action.id)\n  },\n  {\n    unsetEditingTag: id => ({ type: 'tags/UNSET_EDITING_TAG' }),\n    reducer: (state, action) => state.set('editingTag', false)\n  },\n  {\n    editTag: (id, values) => ({ type: 'tags/EDIT_TAG', id, values }),\n    reducer: (state, action) => state\n                                  .set('editingTag', false)\n                                  .update('all',\n                                    tags => tags.map(tag =>\n                                      tag.get('id') === action.id ? tag.merge(action.values) : tag\n                                    )\n                                  )\n  }\n]\n\nexport default automap({ namespace, actionReducers, initialState, selectors, sagas })\n","import { Record, List } from 'immutable'\n\nexport const Tag = new Record({\n  id: undefined,\n  name: 'new tag',\n  created: undefined,\n  updated: undefined,\n  isActive: true,\n  isWatching: true,\n  values: List()\n})\n\nexport const ApiResource = Record({\n  isLoading: false,\n  success: false,\n  error: undefined,\n})\n\nexport const Stream = Record({\n  isConnected: false,\n  lastMessageReceived: undefined,\n  error: undefined,\n})\n","import io from 'socket.io-client'\nimport { eventChannel } from 'redux-saga'\nimport { fork, take, call, put, all, cancel } from 'redux-saga/effects'\n\nimport tags from './tags'\nconst CHANNEL_NAME = '/tags'\n\nfunction connect(channel) {\n  console.log('connecting to socket channel', channel)\n  const socket = io()\n  return new Promise((resolve) => {\n    socket.on('connect', () => {\n      console.log('connected to socket server')\n      resolve(socket)\n    })\n  })\n}\n\nfunction subscribe(socket) {\n  return eventChannel((emit) => {\n    socket.on('tags/update', (data) => {\n      emit(data)\n    })\n    socket.on('disconnect', () => {\n      console.warn('socket disconnected')\n    })\n    return () => { }\n  })\n}\n\nfunction* listen(socket) {\n  const channel = yield call(subscribe, socket)\n  while (true) {\n    const { id, values } = yield take(channel)\n    // console.log(`receiving data from channel ${CHANNEL_NAME}`, id, values)\n    yield put(tags.updateTagFromStream(id, values ))\n  }\n}\n\nexport default function* streamingSaga() {\n  while (true) {\n    // Wait until connect requested\n    yield take('tags/stream/CONNECT')\n\n    // Create a socket connection\n    const socket = yield call(connect, CHANNEL_NAME)\n    yield put(tags.connectStreamSuccess())\n    /*\n      Parallelize the following tasks, and continue:\n        - listen for socket events\n        - wait for user to start a signal stream\n        - wait for user to stop a signal stream\n    */\n    const tasks = yield all([\n      fork(listen, socket),\n    ])\n\n    // Wait until disconnect requested\n    yield take('tags/stream/DISCONNECT')\n\n    // Close the socket connection\n    socket.emit('disconnect')\n    socket.close()\n\n    // stop each task\n    // yield cancel(...tasks)\n  }\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Navigation, { routes } from './Nav'\n\nconst App = () =>\n  <div>\n    <h1>FuseBox Workflow Demo</h1>\n    <Navigation />\n    <div className=\"page-content\">\n      <Switch>\n        {\n          routes.map(route => <Route\n                                key={route.path}\n                                path={route.path}\n                                component={route.component}\n                              />\n          )\n        }\n        <Redirect from=\"/\" exact to={routes.length && routes[0].path} />\n      </Switch>\n    </div>\n  </div>\n\nexport default App\n","import React from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom'\n\n// pages\nimport { ConnectedGroupsList } from './pages/Groups'\nimport { ConnectedPackage } from './pages/Package'\nimport Tags from './pages/Tags'\n\nexport const routes = [\n  { path: '/list', name: 'Groups', component: ConnectedGroupsList },\n  { path: '/package', name: 'Package', component: ConnectedPackage },\n  { path: '/groups', name: 'Streaming Tags', component: Tags },\n]\n\nexport const Nav = () =>\n  <Menu pointing secondary className=\"navigation\">\n    {\n      routes.map(route => <Menu.Item\n                            key={route.path}\n                            to={route.path}\n                            name={route.name}\n                            as={NavLink}\n                          />)\n    }\n  </Menu>\n\nexport default Nav\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fromImmutable } from 'react-wrappers'\nimport { Divider, Table } from 'semantic-ui-react'\nimport GroupRow from './GroupRow'\nimport AddGroup from './AddGroup'\nimport GroupOrder from './GroupOrder'\nimport groups from '../../../state/groups'\n\nconst GroupsList = ({ groups = [], groupsTreeData, addGroup, removeGroup, toggleIsActive, reorderGroups, editGroup }) => {\n  return (\n    <React.Fragment>\n      <AddGroup addGroup={addGroup} />\n      <Divider horizontal>{ groups.length } Items</Divider>\n\n      {\n        /*\n          <Table compact celled definition>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell />\n                <Table.HeaderCell>Id</Table.HeaderCell>\n                <Table.HeaderCell>Name</Table.HeaderCell>\n                <Table.HeaderCell>Created</Table.HeaderCell>\n                <Table.HeaderCell>Active</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {\n                groups.map(group => <GroupRow\n                                    key={group.id}\n                                    group={group}\n                                    removeGroup={() => removeGroup(group.id)}\n                                    toggleIsActive={() => toggleIsActive(group.id)}\n                                  />\n                          )\n              }\n            </Table.Body>\n          </Table>\n        */\n      }\n\n\n      <GroupOrder\n        groups={groups}\n        treeData={groupsTreeData}\n        reorderGroups={reorderGroups}\n        editGroup={editGroup}\n      />\n    </React.Fragment>\n  )\n}\n\nGroupsList.propTypes = {\n  groups: PropTypes.array.isRequired,\n  addGroup: PropTypes.func.isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  toggleIsActive: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  groups: groups.getGroups(state),\n  groupsTreeData: groups.getTreeData(state)\n})\n\nexport const ConnectedGroupsList = connect(mapStateToProps, groups.actions)(fromImmutable(GroupsList))\n\nexport default GroupsList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Table, Checkbox } from 'semantic-ui-react'\nimport humanize from 'humanize-duration'\n\nconst GroupRow = ({ group, removeGroup, toggleIsActive }) =>\n  <Table.Row>\n    <Table.Cell width={1}>\n      <Button\n        circular\n        fluid\n        icon=\"trash\"\n        size=\"mini\"\n        onClick={removeGroup}\n        disabled={group.isActive}\n        />\n    </Table.Cell>\n    <Table.Cell width={1}>{ group.id }</Table.Cell>\n    <Table.Cell>{ group.title }</Table.Cell>\n    <Table.Cell>created { humanize(new Date() - group.date, { round: true }) } ago</Table.Cell>\n    <Table.Cell width={1}>\n      <Checkbox\n        toggle\n        checked={group.isActive}\n        onClick={toggleIsActive}\n        />\n    </Table.Cell>\n  </Table.Row>\n\nGroupRow.propTypes = {\n  group: PropTypes.object.isRequired,\n  removeGroup: PropTypes.func.isRequired,\n  toggleIsActive: PropTypes.func.isRequired,\n}\n\nexport default GroupRow\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Input, Form } from 'semantic-ui-react'\n\nclass AddGroup extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { value: 'foo' }\n    this.update = this.update.bind(this)\n    this.addGroup = this.addGroup.bind(this)\n  }\n\n  update(e) {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  addGroup() {\n    let groupName = this.state.value || 'new item'\n    this.props.addGroup(groupName)\n    this.setState({ value: '' })\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.addGroup}>\n        <Input\n          fluid\n          placeholder=\"New Group\"\n          action={{ labelPosition: 'right', icon: 'plus', content: 'Add Group' }}\n          actionPosition='left'\n          onChange={this.update}\n          value={this.state.value}\n          />\n      </Form>\n    )\n  }\n}\n\nAddGroup.propTypes = {\n  addGroup: PropTypes.func.isRequired\n}\n\nexport default AddGroup\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport SortableTree, { getFlatDataFromTree } from 'react-sortable-tree'\nimport 'react-sortable-tree/style.css'\n\nimport EditableGroup from './EditableGroup'\n\nclass GroupOrder extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.orderChanged = this.orderChanged.bind(this)\n  }\n\n  orderChanged(treeData) {\n    const { reorderGroups } = this.props\n    const flat = getFlatDataFromTree({\n      treeData,\n      getNodeKey: ({ node }) => node.id,\n      ignoreCollapsed: false\n    })\n\n    const remapped = flat.map(group => ({\n      id: group.node.id,\n      expanded: group.node.expanded,\n      parentId: group.parentNode && group.parentNode.id,\n    }))\n\n    // console.log('tree changed', treeData)\n    // console.log('flat', flat)\n    // console.log('remapped', remapped)\n    // console.log('reorderGroups', reorderGroups)\n\n    reorderGroups(remapped)\n  }\n\n  render() {\n    const { treeData, editGroup } = this.props\n\n    console.log('props', this.props)\n\n    return (\n      <SortableTree\n        treeData={treeData}\n        onChange={this.orderChanged}\n        rowHeight={58}\n        generateNodeProps={(node, path) => ({\n          title: <EditableGroup title={node.node.title} id={node.node.id} editGroup={editGroup} />\n        })}\n        />\n    )\n  }\n}\n\nexport default GroupOrder\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withFormik, Field } from 'formik'\nimport { Input } from 'semantic-ui-react'\nimport classNames from 'classnames'\n\nconst EditableGroupForm = ({\n  values,\n  errors,\n  touched,\n  handleChange,\n  handleBlur,\n  handleSubmit,\n  isSubmitting,\n  dirty\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        id={values.id}\n        transparent\n        className={classNames(\"editable-groupname\", { dirty })}\n        name=\"title\"\n        onChange={handleChange}\n        placeholder=\"Group Name\"\n        value={values.title}\n      />\n    </form>\n  )\n}\n\nexport default withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: ({ title, id, editGroup }) => ({ title, id, editGroup }),\n  handleSubmit: (values, { props, setSubmitting, setErrors }) => {\n    props.editGroup(props.id, { title: values.title })\n  },\n})(EditableGroupForm)\n\n\n/*\n\n\n\n<input\n          className=\"ui input fluid\"\n          type=\"text\"\n          onChange={handleChange}\n          onBlur={handleSubmit}\n          value={values.title}\n          name=\"title\"\n        />\n\n\n*/\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { fromImmutable } from 'react-wrappers'\nimport Dependencies from './Dependencies'\nimport ErrorMessage from '../../messages/ErrorMessage'\nimport api from '../../../state/api'\n\nconst Package = ({ pkg, deps, devDeps, timesLoaded, loadPackageInfo }) =>\n  <div className=\"package-loader\">\n    <Button fluid disabled={pkg.isLoading} onClick={loadPackageInfo} loading={pkg.isLoading}>\n      { deps.length ? `Reload Package (loaded ${timesLoaded} times)` : 'Load Package' }\n    </Button>\n    { deps.length > 0 && <Dependencies deps={deps} devDeps={devDeps} /> }\n    { pkg.error && <ErrorMessage message={pkg.error} /> }\n  </div>\n\nPackage.propTypes = {\n  pkg: PropTypes.object.isRequired,\n  deps: PropTypes.array,\n  devDeps: PropTypes.array,\n  timesLoaded: PropTypes.number.isRequired,\n  loadPackageInfo: PropTypes.func.isRequired,\n}\n\nPackage.defaultProps = {\n  deps: [],\n  devDeps: []\n}\n\nconst mapStateToProps = state => ({\n  pkg: api.getPackage(state),\n  deps: api.getDependenciesAsArray(state),\n  devDeps: api.getDevDependenciesAsArray(state),\n  timesLoaded: api.getTimesLoaded(state),\n})\n\nexport const ConnectedPackage = connect(mapStateToProps, {\n  loadPackageInfo: api.actions.loadPackageInfo\n})(fromImmutable(Package))\n\nexport default Package\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Message } from 'semantic-ui-react'\nimport List from './List'\n\nconst Dependencies = ({ deps, devDeps }) =>\n  <Message positive>\n    <Grid columns={2} divided>\n      <Grid.Row>\n        <Grid.Column>\n          <List name=\"Dependencies\" libs={deps} />\n        </Grid.Column>\n        <Grid.Column>\n          <List name=\"Dev. Dependencies\" libs={devDeps} />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </Message>\n\nDependencies.propTypes = {\n  deps: PropTypes.array,\n  devDeps: PropTypes.array,\n}\n\nDependencies.defaultProps = {\n  deps: [],\n  devDeps: [],\n}\n\nexport default Dependencies\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { List, Statistic } from 'semantic-ui-react'\n\nconst PackageList =({ name, libs = [] }) =>\n  <div>\n    <Statistic horizontal color=\"green\" label={name} value={libs.length} />\n    <List>\n      {\n        libs.map(lib => (\n          <List.Item key={lib.name}><b>{ lib.name }</b>: { lib.version }</List.Item>\n        ))\n      }\n    </List>\n  </div>\n\nPackageList.propTypes = {\n  name: PropTypes.string.isRequired,\n  libs: PropTypes.array,\n}\n\nPackageList.defaultProps = {\n  libs: [],\n}\n\nexport default PackageList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Message } from 'semantic-ui-react'\n\nconst ErrorMessage = ({ message, children }) =>\n  <Message negative>\n    <Message.Header>We&lsquo;ve encountered an error.</Message.Header>\n    <p>{ message || children }</p>\n  </Message>\n\nErrorMessage.propTypes = {\n  message: PropTypes.string,\n  children: PropTypes.element\n}\n\nErrorMessage.defaultProps = {\n  message: undefined,\n  children: undefined\n}\n\nexport default ErrorMessage\n","import React from 'react'\nimport { Grid, Container, Sidebar, Segment, Menu, Card } from 'semantic-ui-react'\nimport { ConnectedGroupsNavigation } from './GroupsNavigation'\nimport { ConnectedTagsList } from './TagsList'\n\nconst cards = Array(7).fill(0).map(i => ({ name: `Tag #${Math.random().toString().slice(0, 6)}` }))\n\nconst Groups = () =>\n  <Grid divided>\n    <Grid.Row>\n      <Grid.Column width={6}>\n        <ConnectedGroupsNavigation />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <ConnectedTagsList />\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n\nexport default Groups\n","import React from 'react'\nimport SortableTree from 'react-sortable-tree'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fromImmutable } from 'react-wrappers'\nimport groups from '../../../state/groups'\n\nconst GroupsNavigation = ({ treeData, toggleGroupExpanded }) =>\n  <SortableTree\n    className=\"tag-groups-tree\"\n    treeData={treeData}\n    onChange={() => {}}\n    rowHeight={52}\n    onVisibilityToggle={({ node, expanded }) => {\n      toggleGroupExpanded(node.id)\n      console.log('toggling group expansion', node, expanded)\n    }}\n    canDrag={false}\n    />\n\nconst mapStateToProps = state => ({\n  treeData: groups.getTreeData(state)\n})\n\nexport const ConnectedGroupsNavigation = connect(mapStateToProps, groups.actions)(fromImmutable(GroupsNavigation))\n\nexport default GroupsNavigation\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fromImmutable } from 'react-wrappers'\nimport { Card, Header } from 'semantic-ui-react'\nimport tags from '../../../state/tags'\nimport Chart from './HighChart'\nimport AllowEdit from './AllowEdit'\n\nconst TagsList = ({ tags, setEditingTag, editingTagID, unsetEditingTag, editTag }) => {\n  return (\n    <Card.Group className=\"tags\" itemsPerRow={3}>\n      {\n        tags.map(tag =>\n          <Card raised className=\"tag\" key={tag.name}>\n            <Card.Header>\n              <Header floated=\"left\" textAlign=\"center\">{tag.name}</Header>\n              <AllowEdit\n                tag={tag}\n                isEditing={tag.id === editingTagID}\n                enterEditMode={() => setEditingTag(tag.id)}\n                exitEditMode={unsetEditingTag}\n                saveTagAction={editTag}\n              />\n            </Card.Header>\n            <Card.Content>\n              <Chart\n                tag={tag}\n                values={tag.values}\n                min={-20}\n                max={20}\n                setEditingTag={() => setEditingTag(tag.id)}\n              />\n            </Card.Content>\n          </Card>\n        )\n      }\n    </Card.Group>\n  )\n}\n\n\nTagsList.propTypes = {\n  tags: PropTypes.array.isRequired,\n  // addItem: PropTypes.func.isRequired,\n  // removeItem: PropTypes.func.isRequired,\n  // toggleIsActive: PropTypes.func.isRequired,\n}\n\nTagsList.defaultProps = {\n  tags: []\n}\n\nconst mapStateToProps = state => ({\n  tags: tags.getActiveTags(state),\n  editingTagID: tags.getEditingTagID(state),\n})\n\nexport const ConnectedTagsList = connect(mapStateToProps, tags.actions)(fromImmutable(TagsList))\n\nexport default TagsList\n","import React from 'react'\nimport ReactHighcharts from 'react-highcharts'\nimport moment from 'moment'\n\nvar config = {\n  chart: {\n    type: 'spline'\n  },\n  title: {\n    text: undefined\n  },\n  credits: {\n    enabled: false\n  },\n  xAxis: {\n    type: 'datetime',\n    dateTimeLabelFormats: { // don't display the dummy year\n      month: '%e. %b',\n      year: '%b'\n    },\n    title: '',\n  },\n  yAxis: {\n    title: '',\n  },\n  series: [{\n    data: Array(50).fill(0),\n  }],\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    spline: {\n      marker: {\n        enabled: false\n      }\n    }\n  }\n}\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n    // this.chart = this.chart.getChart()\n    // console.log('this.chart', this.chart)\n  }\n\n  componentWillReceiveProps(next) {\n    const chart = this.chart.getChart()\n    const newValues = next.values.map(v => [v.date, v.value])\n    // console.log('rendering new values', newValues)\n    // console.log('this.chart', chart)\n    chart.series[0].addPoint(newValues.pop(), true, true, false)\n  }\n\n  render() {\n    return(\n      <div className=\"tag\">\n        <ReactHighcharts config={config} isPureConfig={true} ref={ref => this.chart = ref} />\n      </div>\n    )\n  }\n}\n\nexport default Chart\n","import React from 'react'\nimport { Icon, Dialog, Button, Modal } from 'semantic-ui-react'\n\nconst AllowEdit = ({ tag, isEditing, enterEditMode, exitEditMode, saveTagAction }) => {\n  return (\n    <React.Fragment>\n      <Button\n        basic\n        circular\n        compact\n        className=\"edit-button\"\n        floated=\"right\"\n        icon=\"pencil\"\n        onClick={enterEditMode}\n      />\n\n      <Modal size=\"small\" open={isEditing} onClose={exitEditMode}>\n        <Modal.Header>Edit Tag > { tag.name }</Modal.Header>\n        <Modal.Content>\n          <p>Some edit content forms would go here.</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic onClick={exitEditMode}>Cancel</Button>\n          <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => saveTagAction(tag.id, tag)} />\n        </Modal.Actions>\n      </Modal>\n    </React.Fragment>\n  )\n}\n\nexport default AllowEdit\n"]}